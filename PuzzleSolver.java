package edu.iastate.cs228.hw3;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Scanner;

/**
 * 
 * @author Richa Patel
 *
 */

public class PuzzleSolver {
	/**
	 * Read an initial state from an file. Solve the eight puzzle using two
	 * heuristics based on the number of mismatched tiles and the Manhattan
	 * distance. Each solution is printed out as a sequence of states, generated by
	 * single moves, from the initial state to the goal state. If no solution
	 * exists, report it.
	 * 
	 * @param args
	 * @throws FileNotFoundException
	 *             if the input file does not exist
	 * @throws IllegalArgumentException
	 *             if the initial state from the file is not in the correct format
	 */

	// Read an initial board configuration from a file.

	// Call EightPuzzle.solve8puzzle() to solve the puzzle.

	// You may make it interactive by repeatedly accepting puzzle files and print
	// out
	// solutions (in a manner similar to Project 1). (No extra credit but good for
	// debugging
	// and for the user.)
	public static void main(String[] args) throws FileNotFoundException, IllegalArgumentException {
		// TODO

		State s1 = new State("InitialState.txt"); 
		String s = EightPuzzle.solve8Puzzle(s1);
		
		System.out.println(s);
	}

	
}

